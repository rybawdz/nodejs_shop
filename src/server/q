
[4mPDFTK[24m(1)                                                      General Commands Manual                                                      [4mPDFTK[24m(1)

[1mNAME[0m
       pdftk - A handy tool for manipulating PDF

[1mSYNOPSIS[0m
       [1mpdftk [4m[22m<input[24m [4mPDF[24m [4mfiles[24m [4m|[24m [4m-[24m [4m|[24m [4mPROMPT>[0m
            [ [1minput_pw [4m[22m<input[24m [4mPDF[24m [4mowner[24m [4mpasswords[24m [4m|[24m [4mPROMPT>[24m ]
            [ [4m<operation>[24m [4m<operation[24m [4marguments>[24m ]
            [ [1moutput [4m[22m<output[24m [4mfilename[24m [4m|[24m [4m-[24m [4m|[24m [4mPROMPT>[24m ]
            [ [1mencrypt_40bit [22m| [1mencrypt_128bit [22m| [1mencrypt_aes128 [22m]
            [ [1mallow [4m[22m<permissions>[24m ]
            [ [1mowner_pw [4m[22m<owner[24m [4mpassword[24m [4m|[24m [4mPROMPT>[24m ]
            [ [1muser_pw [4m[22m<user[24m [4mpassword[24m [4m|[24m [4mPROMPT>[24m ]
            [ [1mflatten [22m] [ [1mneed_appearances [22m]
            [ [1mcompress [22m| [1muncompress [22m]
            [ [1mkeep_first_id [22m| [1mkeep_final_id [22m] [ [1mdrop_xfa [22m] [ [1mdrop_xmp [22m]
            [ [1mreplacement_font [4m[22m<font[24m [4mname>[24m ]
            [ [1mverbose [22m] [ [1mdont_ask [22m| [1mdo_ask [22m]
       Where:
            [4m<operation>[24m may be empty, or:
            [ [1mcat [22m| [1mshuffle [22m| [1mburst [22m| [1mrotate [22m|
              [1mgenerate_fdf [22m| [1mfill_form [22m|
              [1mbackground [22m| [1mmultibackground [22m|
              [1mstamp [22m| [1mmultistamp [22m|
              [1mdump_data [22m| [1mdump_data_utf8 [22m|
              [1mdump_data_fields [22m| [1mdump_data_fields_utf8 [22m|
              [1mdump_data_annots [22m|
              [1mupdate_info [22m| [1mupdate_info_utf8 [22m|
              [1mattach_files [22m| [1munpack_files [22m]

       For Complete Help: [1mpdftk --help[0m

[1mDESCRIPTION[0m
       If PDF is electronic paper, then pdftk is an electronic staple-remover, hole-punch, binder, secret-decoder-ring, and X-Ray-glasses.  Pdftk
       is a simple tool for doing everyday things with PDF documents.  Use it to:

       * Merge PDF Documents or Collate PDF Page Scans
       * Split PDF Pages into a New Document
       * Rotate PDF Documents or Pages
       * Decrypt Input as Necessary (Password Required)
       * Encrypt Output as Desired
       * Fill PDF Forms with X/FDF Data and/or Flatten Forms
       * Generate FDF Data Stencils from PDF Forms
       * Apply a Background Watermark or a Foreground Stamp
       * Report PDF Metrics, Bookmarks and Metadata
       * Add/Update PDF Metrics, Bookmarks or Metadata
       * Attach Files to PDF Pages or the PDF Document
       * Unpack PDF Attachments
       * Burst a PDF Document into Single Pages
       * Uncompress and Re-Compress Page Streams
       * Repair Corrupted PDF (Where Possible)

[1mOPTIONS[0m
       A summary of options is included below.

       [1m--help[22m, [1m-h[0m
              Show this summary of options.

       [1m<input PDF files | - | PROMPT>[0m
              A  list  of the input PDF files. If you plan to combine these PDFs (without using handles) then list files in the order you want them
              combined.  Use [1m- [22mto pass a single PDF into pdftk via stdin.  Input files can be associated with handles, where a  handle  is  one  or
              more upper-case letters:

              [4m<input[24m [4mPDF[24m [4mhandle>[24m[1m=[4m[22m<input[24m [4mPDF[24m [4mfilename>[0m

              Handles are often omitted.  They are useful when specifying PDF passwords or page ranges, later.

              For example: A=input1.pdf QT=input2.pdf M=input3.pdf

       [1m[input_pw <input PDF owner passwords | PROMPT>][0m
              Input PDF owner passwords, if necessary, are associated with files by using their handles:

              [4m<input[24m [4mPDF[24m [4mhandle>[24m[1m=[4m[22m<input[24m [4mPDF[24m [4mfile[24m [4mowner[24m [4mpassword>[0m

              If handles are not given, then passwords are associated with input files by order.

              Most pdftk features require that encrypted input PDF are accompanied by the ~owner~ password. If the input PDF has no owner password,
              then the user password must be given, instead.  If the input PDF has no passwords, then no password should be given.

              When running in [1mdo_ask [22mmode, pdftk will prompt you for a password if the supplied password is incorrect or none was given.

       [1m[<operation> <operation arguments>][0m
              Available  operations  are:  [1mcat[22m,  [1mshuffle[22m,  [1mburst[22m,  [1mrotate[22m, [1mgenerate_fdf[22m, [1mfill_form[22m, [1mbackground[22m, [1mmultibackground[22m, [1mstamp[22m, [1mmultistamp[22m,
              [1mdump_data[22m, [1mdump_data_utf8[22m, [1mdump_data_fields[22m, [1mdump_data_fields_utf8[22m, [1mdump_data_annots[22m,  [1mupdate_info[22m,  [1mupdate_info_utf8[22m,  [1mattach_files[22m,
              [1munpack_files[22m. Some operations takes additional arguments, described below.

              If  this  optional argument is omitted, then pdftk runs in 'filter' mode.  Filter mode takes only one PDF input and creates a new PDF
              after applying all of the output options, like encryption and compression.

          [1mcat [<page ranges>][0m
                 Assembles (catenates) pages from input PDFs to create a new PDF. Use [1mcat [22mto merge PDF pages or to split PDF pages from  documents.
                 You can also use it to rotate PDF pages. Page order in the new PDF is specified by the order of the given page ranges. Page ranges
                 are described like this:

                 [4m<input[24m [4mPDF[24m [4mhandle>[24m[[4m<begin[24m [4mpage[24m [4mnumber>[24m[[1m-[4m[22m<end[24m [4mpage[24m [4mnumber>[24m[[4m<qualifier>[24m]]][[4m<page[24m [4mrotation>[24m]

                 Where  the  handle  identifies  one  of the input PDF files, and the beginning and ending page numbers are one-based references to
                 pages in the PDF file.  The qualifier can be [1meven[22m, [1modd[22m, or [1m~[22m, and the page rotation can be [1mnorth[22m, [1msouth[22m, [1meast[22m, [1mwest[22m, [1mleft[22m,  [1mright[22m,
                 or [1mdown[22m.

                 If  a  PDF handle is given but no pages are specified, then the entire PDF is used. If no pages are specified for any of the input
                 PDFs, then the input PDFs' bookmarks are also merged and included in the output.

                 If the handle is omitted from the page range, then the pages are taken from the first input PDF.

                 The [1meven [22mqualifier causes pdftk to use only the even-numbered PDF pages, so [1m1-6even [22myields  pages  2,  4  and  6  in  that  order.
                 [1m6-1even [22myields pages 6, 4 and 2 in that order.

                 The [1modd [22mqualifier works similarly to the [1meven[22m.

                 Pages  can be subtracted from a page range using the [1m~ [22mqualifier followed by a page range. For instance, [1m1-20~5-6 [22mand [1m1-20~5~6 [22mare
                 equivalent to [1m1-4 7-20[22m, and [1m~5 [22myields all pages except page 5. Depending on your shell, you may need to quote  this  argument  be‚Äê
                 cause of the ~ at the beginning.

                 The  page  rotation  setting can cause pdftk to rotate pages and documents.  Each option sets the page rotation as follows (in de‚Äê
                 grees): [1mnorth[22m: 0, [1meast[22m: 90, [1msouth[22m: 180, [1mwest[22m: 270, [1mleft[22m: -90, [1mright[22m: +90, [1mdown[22m: +180. [1mleft[22m, [1mright[22m, and [1mdown [22mmake relative  adjust‚Äê
                 ments to a page's rotation.

                 If no arguments are passed to cat, then pdftk combines all input PDFs in the order they were given to create the output.

                 [1mNOTES:[0m
                 * [4m<end[24m [4mpage[24m [4mnumber>[24m may be less than [4m<begin[24m [4mpage[24m [4mnumber>[24m.
                 * The keyword [1mend [22mmay be used to reference the final page of a document instead of a page number.
                 * Reference a single page by omitting the ending page number.
                 * The handle may be used alone to represent the entire PDF document, e.g., B1-end is the same as B.
                 *  You  can  reference page numbers in reverse order by prefixing them with the letter [1mr[22m. For example, page r1 is the last page of
                 the document, r2 is the next-to-last page of the document, and rend is the first page of the document. You can use this prefix  in
                 ranges, too, for example r3-r1 is the last three pages of a PDF.

                 [1mPage Range Examples without Handles:[0m
                 [1m1\-endeast [22m‚Äì rotate entire document 90 degrees
                 [1m5 11 20 [22m‚Äì take single pages from input PDF
                 [1m5-25oddwest [22m‚Äì take odd pages in range, rotate 90 degrees
                 [1m6-1 [22m‚Äì reverse pages in range from input PDF

                 [1mPage Range Examples Using Handles:[0m
                 Say [1mA=in1.pdf B=in2.pdf[22m, then:
                 [1mA1-21 [22m‚Äì take range from in1.pdf
                 [1mBend-1odd [22m‚Äì take all odd pages from in2.pdf in reverse order
                 [1mA72 [22m‚Äì take a single page from in1.pdf
                 [1mA1-21 Beven A72 [22m‚Äì assemble pages from both in1.pdf and in2.pdf
                 [1mAwest [22m‚Äì rotate entire in1.pdf document 90 degrees
                 [1mB [22m‚Äì use all of in2.pdf
                 [1mA2-30evenleft [22m‚Äì take the even pages from the range, remove 90 degrees from each page's rotation
                 [1mA A [22m‚Äì catenate in1.pdf with in1.pdf
                 [1mAevenwest Aoddeast [22m‚Äì apply rotations to even pages, odd pages from in1.pdf
                 [1mAwest Bwest Bdown [22m‚Äì catenate rotated documents

          [1mshuffle [<page ranges>][0m
                 Collates  pages  from  input  PDFs to create a new PDF.  Works like the [1mcat [22moperation except that it takes one page at a time from
                 each page range to assemble the output PDF.  If one range runs out of pages, it continues with the remaining ranges.   Ranges  can
                 use  all  of the features described above for [1mcat[22m, like reverse page ranges, multiple ranges from a single PDF, and page rotation.
                 This feature was designed to help collate PDF pages after scanning paper documents.

          [1mburst  [22mSplits a single input PDF document into individual pages. Also creates a report named [1mdoc_data.txt [22mwhich is the same as the output
                 from [1mdump_data[22m.  The [1moutput [22msection can contain a printf-styled format string to name these pages.  For example, if you want pages
                 named page_01.pdf, page_02.pdf, etc., pass [1moutput page_%02d.pdf [22mto pdftk. If the  pattern  is  omitted,  then  a  default  pattern
                 g_%04d.pdf is appended and produces pages named pg_0001.pdf, pg_0002.pdf, etc.  Encryption can be applied to the output by append‚Äê
                 ing output options such as [1mowner_pw[22m, e.g.:

                 pdftk in.pdf burst owner_pw foopass

          [1mrotate [<page ranges>][0m
                 Takes  a  single  input  PDF  and rotates just the specified pages.  All other pages remain unchanged.  The page order remains un‚Äê
                 changed.  Specify the pages to rotate using the same notation as you would with [1mcat[22m, except you omit the pages that you aren't ro‚Äê
                 tating:

                 [[4m<begin[24m [4mpage[24m [4mnumber>[24m[[1m-[4m[22m<end[24m [4mpage[24m [4mnumber>[24m[[4m<qualifier>[24m]]][[4m<page[24m [4mrotation>[24m]

                 The qualifier can be [1meven [22mor [1modd[22m, and the page rotation can be [1mnorth[22m, [1msouth[22m, [1meast[22m, [1mwest[22m, [1mleft[22m, [1mright[22m, or [1mdown[22m.

                 Each option sets the page rotation as follows (in degrees): [1mnorth[22m: 0, [1meast[22m: 90, [1msouth[22m: 180, [1mwest[22m:  270,  [1mleft[22m:  -90,  [1mright[22m:  +90,
                 [1mdown[22m: +180. [1mleft[22m, [1mright[22m, and [1mdown [22mmake relative adjustments to a page's rotation.

                 The given order of the pages doesn't change the page order in the output.

          [1mgenerate_fdf[0m
                 Reads  a  single  input PDF file and generates an FDF file suitable for [1mfill_form [22mout of it to the given output filename or (if no
                 output is given) to stdout.  Does not create a new PDF.

          [1mfill_form <FDF data filename | XFDF data filename | - | PROMPT>[0m
                 Fills the single input PDF's form fields with the data from an FDF file, XFDF  file  or  stdin.  Enter  the  data  filename  after
                 [1mfill_form[22m, or use [1m- [22mto pass the data via stdin, like so:

                 pdftk form.pdf fill_form data.fdf output form.filled.pdf

                 If the input FDF file includes Rich Text formatted data in addition to plain text, then the Rich Text data is packed into the form
                 fields  [4mas[24m [4mwell[24m [4mas[24m the plain text.  Pdftk also sets a flag that cues Reader/Acrobat to generate new field appearances based on the
                 Rich Text data.  So when the user opens the PDF, the viewer will create the Rich Text appearance on the spot.  If the  user's  PDF
                 viewer  does  not  support Rich Text, then the user will see the plain text data instead.  If you flatten this form before Acrobat
                 has a chance to create (and save) new field appearances, then the plain text field data is what you'll see.

                 Also see the [1mflatten[22m, [1mneed_appearances[22m, and [1mreplacement_font [22moptions.

          [1mbackground <background PDF filename | - | PROMPT>[0m
                 Applies a PDF watermark to the background of a single input PDF.  Pass the background PDF's filename after [1mbackground [22mlike so:

                 pdftk in.pdf background back.pdf output out.pdf

                 Pdftk uses only the first page from the background PDF and applies it to every page of the input PDF.  This page is scaled and ro‚Äê
                 tated as needed to fit the input page.  You can use [1m- [22mto pass a background PDF into pdftk via stdin.

                 If the input PDF does not have a transparent background (such as a PDF created from page  scans)  then  the  resulting  background
                 won't be visible ‚Äì use the [1mstamp [22moperation instead.

          [1mmultibackground <background PDF filename | - | PROMPT>[0m
                 Same  as the [1mbackground [22moperation, but applies each page of the background PDF to the corresponding page of the input PDF.  If the
                 input PDF has more pages than the stamp PDF, then the final stamp page is repeated across these remaining pages in the input PDF.

          [1mstamp <stamp PDF filename | - | PROMPT>[0m
                 This behaves just like the [1mbackground [22moperation except it overlays the stamp PDF page [4mon[24m [4mtop[24m of the input  PDF  document's  pages.
                 This works best if the stamp PDF page has a transparent background.

          [1mmultistamp <stamp PDF filename | - | PROMPT>[0m
                 Same as the [1mstamp [22moperation, but applies each page of the background PDF to the corresponding page of the input PDF.  If the input
                 PDF has more pages than the stamp PDF, then the final stamp page is repeated across these remaining pages in the input PDF.

          [1mdump_data[0m
                 Reads  a  single  input  PDF file and reports its metadata, bookmarks (a/k/a outlines), page metrics (media, rotation and labels),
                 data embedded by STAMPtk (see STAMPtk's [1membed [22moption) and other data to the given output filename or (if no output  is  given)  to
                 stdout.  Non-ASCII characters are encoded as XML numerical entities.  Does not create a new PDF.

          [1mdump_data_utf8[0m
                 Same as [1mdump_data [22mexcept that the output is encoded as UTF-8.

          [1mdump_data_fields[0m
                 Reads a single input PDF file and reports form field statistics to the given output filename or (if no output is given) to stdout.
                 Non-ASCII characters are encoded as XML numerical entities. Does not create a new PDF.

          [1mdump_data_fields_utf8[0m
                 Same as [1mdump_data_fields [22mexcept that the output is encoded as UTF-8.

          [1mdump_data_annots[0m
                 [1mThis  operation  currently reports only link annotations.  [22mReads a single input PDF file and reports annotation information to the
                 given output filename or (if no output is given) to stdout. Non-ASCII characters are encoded as XML numerical entities.  Does  not
                 create a new PDF.

          [1mupdate_info <info data filename | - | PROMPT>[0m
                 Changes  the bookmarks, page labels, page sizes, page rotations, and metadata in a single PDF's Info dictionary to match the input
                 data file. The input data file uses the same syntax as the output from [1mdump_data[22m. Non-ASCII characters should be  encoded  as  XML
                 numerical entities.

                 This  operation  does not change the metadata stored in the PDF's XMP stream, if it has one. (For this reason you should include a
                 [1mModDate [22mentry in your updated info with a current date/timestamp, format: [1mD:YYYYMMDDHHmmSS[22m, e.g. D:201307241346 ‚Äì omitted data af‚Äê
                 ter YYYY revert to default values.)

                 For example:

                 pdftk in.pdf update_info in.info output out.pdf

          [1mupdate_info_utf8 <info data filename | - | PROMPT>[0m
                 Same as [1mupdate_info [22mexcept that the input is encoded as UTF-8.

          [1mattach_files <attachment filenames | PROMPT> [to_page <page number | PROMPT> | relation <relationship>][0m
                 Packs arbitrary files into a PDF using PDF's file attachment features. More than one attachment may be listed after  [1mattach_files[22m.
                 Attachments  are  added at the document level unless the optional [1mto_page [22moption is given, in which case the files are attached to
                 the given page number (the first page is 1, the final page is [1mend[22m). Attachments at the document level may be tagged with  a  rela‚Äê
                 tionship among [1mSource[22m, [1mData[22m, [1mAlternative[22m, [1mSupplement[22m, and [1mUnspecified [22m(default).

                 For example:

                 pdftk in.pdf attach_files table1.html table2.html to_page 6 output out.pdf

                 pdftk in.pdf attach_files in.tex relation Source output out.pdf

          [1munpack_files[0m
                 Copies  all  of the attachments from the input PDF into the current folder or to an output directory given after [1moutput[22m. For exam‚Äê
                 ple:

                 pdftk report.pdf unpack_files output ~/atts/

                 or, interactively:

                 pdftk report.pdf unpack_files output PROMPT

       [1m[output <output filename | - | PROMPT>][0m
              The output PDF filename may not be set to the name of an input filename. Use [1m- [22mto output to stdout.  When using the [1mdump_data  [22mopera‚Äê
              tion,  use  [1moutput  [22mto  set the name of the output data file. When using the [1munpack_files [22moperation, use [1moutput [22mto set the name of an
              output directory.  When using the [1mburst [22moperation, you can use [1moutput [22mto control the resulting PDF page filenames (described above).

       [1m[encrypt_40bit | encrypt_128bit | encrypt_aes128][0m
              If an output PDF user or owner password is given, the output PDF encryption algorithm defaults to AES-128. The weaker RC4 40-bit  and
              RC4 128-bit algorithms can be chosen by specifying encrypt_40bit or encrypt_128bit (discouraged).

       [1m[allow <permissions>][0m
              Permissions are applied to the output PDF only if an encryption strength is specified or an owner or user password is given.  If per‚Äê
              missions are not specified, they default to 'none,' which means all of the following features are disabled.

              The [1mpermissions [22msection may include one or more of the following features:

              [1mPrinting[0m
                     Top Quality Printing

              [1mDegradedPrinting[0m
                     Lower Quality Printing

              [1mModifyContents[0m
                     Also allows Assembly

              [1mAssembly[0m

              [1mCopyContents[0m
                     Also allows ScreenReaders

              [1mScreenReaders[0m

              [1mModifyAnnotations[0m
                     Also allows FillIn

              [1mFillIn[0m

              [1mAllFeatures[0m
                     Allows the user to perform all of the above, and top quality printing.

       [1m[owner_pw <owner password | PROMPT>][0m

       [1m[user_pw <user password | PROMPT>][0m
              If  an  encryption  strength is given but no passwords are supplied, then the owner and user passwords remain empty, which means that
              the resulting PDF may be opened and its security parameters altered by anybody.

       [1m[compress | uncompress][0m
              These are only useful when you want to edit PDF code in a text editor like vim or emacs.  Remove PDF page stream compression  by  ap‚Äê
              plying the [1muncompress [22mfilter. Use the [1mcompress [22mfilter to restore compression.

       [1m[flatten][0m
              Use  this  option  to  merge  an input PDF's interactive form fields (and their data) with the PDF's pages. Only one input PDF may be
              given. Sometimes used with the [1mfill_form [22moperation.

       [1m[need_appearances][0m
              Sets a flag that cues Reader/Acrobat to generate new field appearances based on the form field values.  Use this when filling a  form
              with non-ASCII text to ensure the best presentation in Adobe Reader or Acrobat.  It won't work when combined with the [1mflatten [22moption.

       [1m[replacement_font <font name>][0m
              Use the specified font to display text in form fields. This option is useful when filling a form with non-ASCII text that is not sup‚Äê
              ported  by  the fonts included in the input PDF. [1mfont name [22mmay be either the file name or the family name of a font, but using a file
              name is more reliable. Currently only TrueType fonts with Unicode text are supported.

       [1m[keep_first_id | keep_final_id][0m
              When combining pages from multiple PDFs, use one of these options to copy the document ID from either the first or final input  docu‚Äê
              ment  into the new output PDF. Otherwise pdftk creates a new document ID for the output PDF. When no operation is given, pdftk always
              uses the ID from the (single) input PDF.

       [1m[drop_xfa][0m
              If your input PDF is a form created using Acrobat 7 or Adobe Designer, then it probably has XFA data.   Filling  such  a  form  using
              pdftk  yields a PDF with data that fails to display in Acrobat 7 (and 6?).  The workaround solution is to remove the form's XFA data,
              either before you fill the form using pdftk or at the time you fill the form. Using this option causes pdftk to  omit  the  XFA  data
              from the output PDF form.

              This option is only useful when running pdftk on a single input PDF.  When assembling a PDF from multiple inputs using pdftk, any XFA
              data in the input is automatically omitted.

       [1m[drop_xmp][0m
              Many PDFs store document metadata using both an Info dictionary (old school) and an XMP stream (new school).  Pdftk's [1mupdate_info [22mop‚Äê
              eration can update the Info dictionary, but not the XMP stream.  The proper remedy for this is to include a [1mModDate [22mentry in your up‚Äê
              dated  info  with  a current date/timestamp. The date/timestamp format is: [1mD:YYYYMMDDHHmmSS[22m, e.g. D:201307241346 ‚Äì omitted data after
              YYYY revert to default values. This newer ModDate should cue PDF viewers that the Info metadata is more current than the XMP data.

              Alternatively, you might prefer to remove the XMP stream from the PDF altogether ‚Äì that's what this option does.  Note  that  objects
              inside  the  PDF  might  have their own, separate XMP metadata streams, and that [1mdrop_xmp [22mdoes not remove those.  It only removes the
              PDF's document-level XMP stream.

       [1m[verbose][0m
              By default, pdftk runs quietly. Append [1mverbose [22mto the end and it will speak up.

       [1m[dont_ask | do_ask][0m
              Depending on the compile-time settings (see ASK_ABOUT_WARNINGS), pdftk might prompt you for further input when it encounters a  prob‚Äê
              lem,  such  as  a  bad  password. Override this default behavior by adding [1mdont_ask [22m(so pdftk won't ask you what to do) or [1mdo_ask [22m(so
              pdftk will ask you what to do).

              When running in [1mdont_ask [22mmode, pdftk will over-write files with its output without notice.

[1mEXAMPLES[0m
       [1mCollate scanned pages[0m
         pdftk A=even.pdf B=odd.pdf shuffle A B output collated.pdf
         or if odd.pdf is in reverse order:
         pdftk A=even.pdf B=odd.pdf shuffle A Bend-1 output collated.pdf

       The following examples use actual passwords as command line parameters, which is discouraged (see the SECURITY CONSIDERATIONS section).

       [1mDecrypt a PDF[0m
         pdftk secured.pdf input_pw foopass output unsecured.pdf

       [1mEncrypt a PDF using AES-128 (the default), withhold all permissions (the default)[0m
         pdftk 1.pdf output 1.128.pdf owner_pw foopass

       [1mSame as above, except password 'baz' must also be used to open output PDF[0m
         pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz

       [1mSame as above, except printing is allowed (once the PDF is open)[0m
         pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz allow printing

       [1mApply RCA 40-bit encryption to output, revoking all permissions (the default). Set the owner PW to 'foopass'.[0m
         pdftk 1.pdf 2.pdf cat output 3.pdf encrypt_40bit owner_pw foopass

       [1mJoin two files, one of which requires the password 'foopass'. The output is not encrypted.[0m
         pdftk A=secured.pdf 2.pdf input_pw A=foopass cat output 3.pdf

       [1mJoin in1.pdf and in2.pdf into a new PDF, out1.pdf[0m
         pdftk in1.pdf in2.pdf cat output out1.pdf
         or (using handles):
         pdftk A=in1.pdf B=in2.pdf cat A B output out1.pdf
         or (using wildcards):
         pdftk *.pdf cat output combined.pdf

       [1mRemove page 13 from in1.pdf to create out1.pdf[0m
         pdftk in.pdf cat 1-12 14-end output out1.pdf
         or:
         pdftk A=in1.pdf cat A1-12 A14-end output out1.pdf

       [1mUncompress PDF page streams for editing the PDF in a text editor (e.g., vim, emacs)[0m
         pdftk doc.pdf output doc.unc.pdf uncompress

       [1mRepair a PDF's corrupted XREF table and stream lengths, if possible[0m
         pdftk broken.pdf output fixed.pdf

       [1mBurst a single PDF document into pages and dump its data to doc_data.txt[0m
         pdftk in.pdf burst

       [1mBurst a single PDF document into encrypted pages. Allow low-quality printing[0m
         pdftk in.pdf burst owner_pw foopass allow DegradedPrinting

       [1mWrite a report on PDF document metadata and bookmarks to report.txt[0m
         pdftk in.pdf dump_data output report.txt

       [1mRotate the first PDF page to 90 degrees clockwise[0m
         pdftk in.pdf cat 1east 2-end output out.pdf

       [1mRotate an entire PDF document to 180 degrees[0m
         pdftk in.pdf cat 1-endsouth output out.pdf

[1mNOTES[0m
       This is a port of pdftk to java. See
       https://gitlab.com/pdftk-java/pdftk
       The original program can be found at www.pdftk.com

[1mAUTHOR[0m
       Original author of pdftk is Sid Steward (sid.steward at pdflabs dot com).

[1mSECURITY CONSIDERATIONS[0m
       Passing a password as a command line parameter is insecure because it can get saved into the shell's history  and  be  accessible  by  other
       users via /proc. Use the keyword [1mPROMPT [22mand input any passwords via standard input instead.

                                                                  December 7, 2020                                                         [4mPDFTK[24m(1)
